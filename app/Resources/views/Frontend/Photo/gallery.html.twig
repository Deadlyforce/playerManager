{% extends '::base.html.twig' %}

{% set btn_delete_title = 'app.contact.gallery.photo.btn.delete'|trans %}
{% set btn_add = 'app.contact.gallery.btn.add'|trans %}

{% block title %}{{ 'app.contact.gallery.tabtitle'|trans }}{% endblock %}

{% block content %}
    <div class="container standard-container" id="container-gallery">
        <section class="page-title">
            <h1>{{ prospect.firstname }} {{ prospect.lastname }} {{ 'app.contact.gallery.title'|trans }}</h1> 
            <h2>{{ 'app.contact.gallery.subtitle'|trans }}</h2>
        </section>
        <div class="page-title-underline"></div>
        
        <div class="page-nav">
            <a class="btn-basic" href="{{ path('prospect_show', {'id': prospect.id}) }}" title="{{ 'app.contact.gallery.btn.contact-back'|trans }}">{{ 'app.contact.gallery.btn.contact-back'|trans }}</a>
            <br>
            <div class="alert alert-danger collapse"></div>
        </div>        

        {{ form_start(editForm, {'attr': {'id':'form-edit-prospect'}}) }}          

            {{ form_label(editForm.photos) }}
            {{ form_errors(editForm.photos) }}

            <ul id="photo-list" data-prototype="{{ form_widget(editForm.photos.vars.prototype)|e }}">
                <div class="row">
                    {% for photo in editForm.photos %}
                        <li class="col-md-4" id="{{ photo.vars.form.vars['name'] }}">
                            <div class="photo-frame">                                
                                <img src="{{ asset(photo.vars.data.path) }}" alt="Photo" />                                
                                <div class="primary"></div>
                                <div class="mask">  
                                    <a class="gallery" href="{{ asset(photo.vars.data.path) }}"></a>
                                </div>                                
                            </div>
                            <div class="photo-actions">
                                <div class="row">
                                    <div class="col-md-4 photo-selected">
                                        {# Make photo primary #}                                        
                                        {{ form_errors(photo.selected) }}
                                        {{ form_label(photo.selected, 'app.contact.gallery.photo.primary') }}
                                        {{ form_widget(photo.selected) }}                                       
                                    </div>
                                    <div class="col-md-8 photo-buttons">
                                        <ul class="pull-right">                                            
                                            <li>
                                                <a href="#" id="{{ photo.vars.data.id }}" class="change-photo" title="{{ 'app.contact.gallery.photo.btn.change'|trans }}">
                                                    <i class="icon ion-ios-reverse-camera-outline"></i>
                                                </a>    
                                            </li>
                                             <li>
                                                <a href="{{ path('photo_edit', {'id': photo.vars.data.id}) }}" title="{{ 'app.contact.gallery.photo.btn.crop'|trans }}">
                                                    <i class="icon ion-ios-crop-strong"></i>
                                                </a>
                                            </li>
                                            <li class="delete-photo">
                                                {# Container for the delete button #}
                                            </li>
                                        </ul>                                            
                                    </div>
                                    <div class="prototype hidden">
                                        {{ form_errors(photo.file) }}
                                        {{ form_widget(photo.file) }} 
                                    </div>
                                </div>                                           
                            </div>                                           
                        </li>

{#                        {% if loop.index % 3 == 0 %}#}
{#                            </div>#}
{#                            <div class="row">#}
{#                        {% endif %}#}
                    {% endfor %}
                </div>
            </ul>       
            <div class="clearfix"></div>
            
            {{ form_row(editForm.submit, {'label':'app.contact.gallery.btn.submit', 'attr': {'class': 'btn-basic-rose pull-right'}}) }}
            
            <div class="hidden">{{ form_rest(editForm) }}</div>
            
            {# Modal: change photo #}
            <div class="modal fade" id="photoFormModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Choose another photo</h4>
                        </div>
                        <div class="modal-body">
                            <div id="image_preview" width="500" height="500">
                                <img src="{{ asset('/bundles/app/images/prospect_no_photo.jpg') }}" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {{ form_end(editForm) }}
    </div>       
        
    <script type="text/javascript">
        $(document).ready(function(){
{#            var locale = "{{ app.request.locale }}"; #}
            
            // On click on "change" photo **************************************
            // moves prototype form inside modal and diplays it
            $("#photo-list").on("click", ".change-photo", function(e){
                e.preventDefault();

                var liId = $(this).closest('ul').closest('.row').closest('li').attr("id");
                var inputFile = $(this).closest(".row").find(".prototype").children("input");                
              
                $("<div id="+liId+"></div>").appendTo("#photoFormModal .modal-body"); // li id into modal
                $(inputFile).appendTo("#photoFormModal .modal-body");  // Prototype into modal              
             
                // Get a new file
                $(inputFile).on('change', function () {                                       
                    var files = $(this)[0].files;                 
                   
                    if (files.length > 0) {                        
                        var file = files[0];
                        var image_preview = $('#image_preview');     
                        
                        var img = image_preview.find('img');
                        img.attr('src', window.URL.createObjectURL(file)); // Update modal preview                      
                    }
                });                

                $("#photoFormModal").modal("show");
            });
            
            // On modal close **************************************************
            $('#photoFormModal').on('hidden.bs.modal', function () {
                var liId = $("#image_preview").next().attr("id");
                
                var inputFile = $("#photoFormModal").find("input");                
                $(inputFile).appendTo($("#"+liId+" .prototype")); // Put form prototype back in place               
                
                var src = $('#image_preview').find('img').attr('src'); // Update page preview   
                var img = $("#"+liId+" .photo-frame img");
                
                if (src != "/bundles/app/images/prospect_no_photo.jpg") {                              
                    img.attr("src", src);  
                }
                
                // Duplicate image and read width and height with callback.
                var image = new Image();

                function loadImage(callback){
                    image.onload = function() {                     
                        callback(this.width, this.height);
                    };                            
                }
                image.src = src;

                loadImage(function(imgwidth, imgheight){
                    // Get img ratio and put right class for display
                    var imgClass = (imgwidth/imgheight > 1) ? 'wide' : 'tall';
                    img.removeClass().addClass(imgClass);
                });
                                
                
                // Cleanup and put the image preview template div, back in place
                $('#photoFormModal .modal-body').empty();
                $('#photoFormModal .modal-body').append("<div id='image_preview'><img src='/bundles/app/images/prospect_no_photo.jpg' /></div>");
                
            });


            // Add photo with form prototype ***********************************
            // Put preview in photo-frame
            $("#photo-list").on("change", ".new-form input[type='file']", function(){  
                $(".alert-danger").hide().empty();
                
                var files = $(this)[0].files;
                        
                if (files.length > 0) {
                    var file = files[0];
                    var size = file.size;

                    var readableSize = formatBytes(size);
                    if (size >= 1200000) {
                        $(".alert-danger").show("slow").html("Your image size is " + readableSize + " , maximum allowed is 1.2M");
                    }                 
                    
                    // Memorize photoFrameHeight for later
                    var photoFrame = $(this).closest('li.new-form').find('.photo-frame');
                    var photoFrameHeight = photoFrame.height();
                    
                    // Put new pic in photo frame
                    var img = $(this).closest('li.new-form').find('.photo-frame img');
                    img.attr('src', window.URL.createObjectURL(file));
                    
                    // Duplicate image and read width and height with callback.
                    var image = new Image();
                    
                    function loadImage(callback){
                        image.onload = function() {                     
                            callback(this.width, this.height);
                        };                            
                    }
                    image.src = window.URL.createObjectURL(file);
                        
                    loadImage(function(imgwidth, imgheight){
                        // Get img ratio and put right class for display
                        var imgClass = (imgwidth/imgheight > 1) ? 'wide' : 'tall';
                        img.removeClass().addClass(imgClass);
                    });
                    
                    
                    // Restore photoFrameHeight
                    photoFrame.height(photoFrameHeight); // Give back photo frame its original height (so tall pics don't stretch it)                    
                    
                }
            });            
        });
        
        // PHOTOS ************************************
        
        // VAR NECESSARY TO HAVE AN ASSETIC PATH IN photos.js (without it, works in dev, not in prod) ******
        var imgDir = "{{ asset('bundles/app/images/') }}";
        
        var btn_add = "{{ btn_add }}";
        var addPhotoLink = $('<a href="#" class="add-photo">'+ btn_add +'</a>');
        var newLiAddPhoto = $('<li class="col-md-4"></li>').append(addPhotoLink);
        
        
        // JAVASCRIPT USED AT DOC READY BY photos.js *******************************************************
        // STAYS HERE BECAUSE OF PRIORITY LOADING, NEEDS imgDir var ****************************************
        
        collectionHolder = $('#photo-list');
        
        // add a delete link to all of the existing photo form li elements
        collectionHolder.find('li').each(function() {
            addPhotoFormDeleteLink($(this));
        });

        $('#photo-list').find("> .row").last().append(newLiAddPhoto); // Append to last row of collectionHolder

        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        collectionHolder.data('index', collectionHolder.find(":input[type='file']").length);

        addPhotoLink.click(function(e) {            
            e.preventDefault();  

            var index = collectionHolder.data('index');

            // add a new Photo form (see next code block)
            if (index < 5) {
                addPhotoForm(collectionHolder, newLiAddPhoto, imgDir);
                // Post add css
                $("#appbundle_prospect_photos_"+index+"_selected").parent().addClass("collapse");
                $("#appbundle_prospect_photos_"+index+"_file").parent().css("margin-top", "12px");
                
                $("#appbundle_prospect_photos_" + (index - 1));              
            }
        });
        
        function formatBytes(bytes,decimals) {
            if(bytes == 0) return '0 Byte';
            var k = 1000;
            var dm = decimals + 1 || 3;
            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
            var i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
        }
        
    </script>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    {% javascripts
        'bundles/app/js/gallery.js'
        'bundles/app/js/photos.js'
    %}        
    <script src="{{ asset_url }}"></script>
    {% endjavascripts%}
{% endblock %}


