{% set addvenue = 'app.encounter.new.venue.add'|trans %}

{% block content %}
    <div class="container">        
        <div class="row encounter-new">
            <div class="col-md-3 left-col">
                <i class="icon ion-ios-wineglass-outline"></i>
            </div>
            <div class="col-md-9 main-col">
                {{ form_start(form) }}
                    {{ form_row(form.date, {'label': 'Date', 'type': 'text', 'attr': {'class': 'datetimepicker'} }) }} 
                    <div>
                        {{ form_label(form.duration, 'app.encounter.new.duration'|trans) }}
                        {{ form_widget(form.duration) }}
                        {{ form_errors(form.duration) }}
                    </div>
                    <div>
                        {{ form_label(form.expenses, 'app.encounter.new.expenses'|trans) }}
                        {{ form_widget(form.expenses) }}
                        {{ form_errors(form.expenses) }}
                    </div>
                    <div class="form-venues">    
                        <p class="edit-venues">{{ 'app.encounter.new.venue.notice'|trans }}</p>                                          
                        {{ form_errors(form.venues) }}                    
                        <ul class="venues" data-prototype="{{ form_widget(form.venues.vars.prototype)|e }}">
                            {# Prototypes #}
                        </ul>                   
                    </div>
                    {{ form_widget(form.submit, {'label': 'app.encounter.new.submit'|trans, 'attr': {'class': 'btn-basic-rose'} }) }}
                {{ form_end(form) }}               
            </div>
        </div>
    </div>
                
    <script type="text/javascript">
        var addvenue = "{{ addvenue }}";
        
        var addVenueLink = $('<a href="#" class="add_venue_link">'+ addvenue +'</a>');
        var newLinkLi = $('<li></li>').append(addVenueLink);
        
        $(document).ready(function(){
            getDatetimepicker();
            
            // Collection management *******************************************
            var collectionHolder = $('ul.venues');
            collectionHolder.append(newLinkLi);
            
            collectionHolder.data('index', collectionHolder.find(':input').length); // Count the number of inputs in coll
            
            addVenueLink.on('click', function(e) {                
                e.preventDefault();
                
                var nbr = (collectionHolder.find('input').length)+1; // count inputs
                
                if (nbr < 4) {                
                    addVenueForm(collectionHolder, newLinkLi); // add a new venue form (see code block below)
                }
            });
            
            function addVenueForm(collectionHolder, newLinkLi) {
                
                var prototype = collectionHolder.data('prototype');                
                var index = collectionHolder.data('index');

                // Replace '$$name$$' in the prototype's HTML to
                // instead be a number based on how many items we have
                var newForm = prototype.replace(/__name__/g, index);
                
                collectionHolder.data('index', index + 1); // increase the index with one for the next item
                
                var newFormLi = $('<li></li>').append(newForm); // Display the form in the page in an li, before the "Add a tag" link li                

                newLinkLi.before(newFormLi);
                
                addVenueFormDeleteLink(newFormLi);
            }
            
            function addVenueFormDeleteLink(venueFormLi)
            {
                var removeForm =  $('<a href="#" class="remove-venue"><i class="icon ion-ios-trash-outline"></i></a>');
                venueFormLi.append(removeForm);

                removeForm.click(function(e){
                    e.preventDefault();        

                    venueFormLi.remove();
                });
            }            
            // End Collection management ***************************************
            
            // Used in modale with form new
            $(".slide-button-base").on("click", ".slide-button", function(){      
                var input = $(this).prev();
                if(input.prop("checked")) {
                    input.prop("checked", false);
                    input.val("0");
                } else {
                    input.prop("checked", true);
                    input.val("1");
                }
            });                     
            
        });
    </script>
{% endblock %}
